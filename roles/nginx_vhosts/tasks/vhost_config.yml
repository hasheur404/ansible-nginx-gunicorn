---
    - name: Check if the Nginx configuration file exists
      stat:
        path: "/etc/nginx/nginx.conf"
      register:
        config_status

    - name: Backup the Nginx configuration file
      copy:
        remote_src: True
        src: "/etc/nginx/nginx.conf"
        dest: "/etc/nginx/nginx.conf.orig"
      when: config_status.stat.exists

    - name: Create the 'sites-available' and 'sites-enabled' dirs
      file:
        path: "/etc/nginx/{{ item }}"
        owner: "root"
        group: "root"
        state: directory
        mode: 0755
      with_items:
        - "sites-available"
        - "sites-enabled"
    
    - name: Include 'sites-enabled' in conf
      lineinfile:
        dest: "/etc/nginx/nginx.conf"
        line: "    include /etc/nginx/sites-enabled/*.conf;"
        insertafter: '^http'
        state: present

    - name: Add new vhosts conf file
      template:
        src: vhosts.com.conf.j2
        dest: "/etc/nginx/sites-available/{{ webuser_name }}.com.conf"

    - name: Symlink from 'sites-available' to 'sites-enabled'
      file:
        src: "/etc/nginx/sites-available/{{ webuser_name }}.com.conf"
        dest: "/etc/nginx/sites-enabled/{{ webuser_name }}.com.conf"
        owner: "root"
        group: "root"
        state: link

    - name: Check Nginx conf
      command: nginx -t

    - name: Copy test index file
      template:
        src: index.debian.html.j2
        dest: "/home/{{ webuser_name }}/public_html/index.html"
        owner: "{{ webuser_name }}"
        group: "{{ webuser_name }}"
      when: ansible_os_family == "Debian"

    - name: Copy test index file
      template:
        src: index.centos.html.j2
        dest: "/home/{{ webuser_name }}/public_html/index.html"
        owner: "{{ webuser_name }}"
        group: "{{ webuser_name }}"
      when: ansible_os_family == "RedHat"

      notify:
        - restart_nginx
